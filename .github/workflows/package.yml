on:
  push:
    tags:
      - v[0-9]+.*
      - testing-ci.*

name: Build Packages

env:
  GPG_KEY_ID: 56C464BAAC421453

jobs:
  build-deb:
    name: Build Debian package
    runs-on: ubuntu-latest
    container: debian:sid

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install build dependencies
      run: |
        sed 's/^deb /deb-src /' /etc/apt/sources.list >> /etc/apt/sources.list
        apt-get -y update
        apt-get -y install build-essential debhelper dpkg-sig fakeroot wget

    - name: Build package
      run: |
        ./debian/makedeb

    - name: Sign package
      env:
        GPG_KEY: ${{ secrets.SURFACE_GPG_KEY }}
      run: |
        # import GPG key
        echo "$GPG_KEY" | base64 -d | gpg --import --no-tty --batch --yes
        export GPG_TTY=$(tty)

        # sign package
        dpkg-sig -g "--batch --no-tty" --sign builder -k $GPG_KEY_ID ./*.deb

    - name: Prepare release
      run: |
        mkdir release
        mv ./*.deb release

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: debian-latest
        path: release

  build-arch:
    name: Build Arch Linux package
    runs-on: ubuntu-latest
    container: archlinux

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install build dependencies
      run: |
        pacman -Sy --noconfirm base-devel sudo fakeroot git

    - name: Build package
      run: |
        cd arch

        # Fix permissions (can't makepkg as root)
        echo "nobody ALL=(ALL) NOPASSWD: /usr/bin/pacman" >> /etc/sudoers
        chown -R nobody .

        # Package compression settings (Matches latest Arch)
        export PKGEXT='.pkg.tar.zst'
        export COMPRESSZST=(zstd -c -T0 --ultra -20 -)

        # Build
        su nobody --pty -p -s /bin/bash -c 'makepkg -f --noconfirm --nodeps'

    - name: Sign package
      env:
        GPG_KEY: ${{ secrets.SURFACE_GPG_KEY }}
      run: |
        cd arch

        # import GPG key
        echo "$GPG_KEY" | base64 -d | gpg --import --no-tty --batch --yes
        export GPG_TTY=$(tty)

        # sign packages
        ls *.pkg.tar.zst | xargs -L1 gpg --detach-sign --batch --no-tty -u $GPG_KEY_ID

    - name: Prepare release
      run: |
        mkdir release
        mv arch/*pkg.tar.zst{,.sig} release

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: arch-latest
        path: release

  build-f31:
    name: Build Fedora 31 package
    runs-on: ubuntu-latest
    container: fedora:31
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install build dependencies
      run: |
        dnf distro-sync -y
        dnf install -y rpmdevtools rpm-sign 'dnf-command(builddep)'
        dnf builddep -y fedora/surface-secureboot.spec

    - name: Build package
      run: |
        cd fedora

        # Build the .rpm packages
        ./makerpm

    - name: Sign packages
      env:
        GPG_KEY: ${{ secrets.SURFACE_GPG_KEY }}
      run: |
        cd fedora/out/noarch

        # import GPG key
        echo "$GPG_KEY" | base64 -d | gpg --import --no-tty --batch --yes

        # sign packages
        rpm --resign *.rpm --define "_gpg_name $GPG_KEY_ID"

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: fedora-31-latest
        path: fedora/out/noarch

  build-f30:
    name: Build Fedora 30 package
    runs-on: ubuntu-latest
    container: fedora:30
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install build dependencies
      run: |
        dnf distro-sync -y
        dnf install -y rpmdevtools rpm-sign 'dnf-command(builddep)'
        dnf builddep -y fedora/surface-secureboot.spec

    - name: Build package
      run: |
        cd fedora

        # Build the .rpm packages
        ./makerpm

    - name: Sign packages
      env:
        GPG_KEY: ${{ secrets.SURFACE_GPG_KEY }}
      run: |
        cd fedora/out/noarch

        # import GPG key
        echo "$GPG_KEY" | base64 -d | gpg --import --no-tty --batch --yes

        # sign packages
        rpm --resign *.rpm --define "_gpg_name $GPG_KEY_ID"

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: fedora-30-latest
        path: fedora/out/noarch

  repo-deb:
    name: Update Debian package repository
    needs: [build-deb]
    runs-on: ubuntu-latest
    container: debian:sid
    steps:
    - name: Install dependencies
      run: |
        apt-get update
        apt-get install -y reprepro git

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        repository: linux-surface/repo
        token: ${{ secrets.GITHUB_BOT_TOKEN }}
        fetch-depth: 0
        ref: master

    - name: Download artifacts
      uses: actions/download-artifact@v1
      with:
        name: debian-latest

    - name: Update repository
      env:
        GPG_KEY: ${{ secrets.SURFACE_GPG_KEY }}
        GIT_REF: ${{ github.ref }}
      run: |
        cd debian

        # Import the GPG key for signing the repository
        echo "$GPG_KEY" | base64 -d | gpg --import --no-tty --batch --yes

        # Add packages to repository
        for pkg in ../debian-latest/*.deb; do
          reprepro --basedir . --component main includedeb release $pkg
        done
        rm -r ../debian-latest

        # Parse git tag from ref
        GIT_TAG=$(echo $GIT_REF | sed 's|^refs/tags/||g')

        # Convert packages into references
        for pkg in $(find . -name '*.deb'); do
          echo "secureboot-mok:$GIT_TAG/$(basename $pkg)" > $pkg.blob
          rm $pkg
        done

    - name: Commit and push
      uses: github-actions-x/commit@v2.3
      with:
        github-token: ${{ secrets.GITHUB_BOT_TOKEN }}
        push-branch: master
        commit-message: Update debian secureboot-mok package
        force-add: false
        rebase: true
        files: debian/*
        name: surfacebot
        email: surfacebot@users.noreply.github.com

  repo-arch:
    name: Update Arch Linux package repository
    needs: [build-arch, repo-deb]
    runs-on: ubuntu-latest
    container: archlinux
    steps:
    - name: Install dependencies
      run: pacman -Sy --noconfirm base-devel git

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        repository: linux-surface/repo
        token: ${{ secrets.GITHUB_BOT_TOKEN }}
        fetch-depth: 0
        ref: master

    - name: Download artifacts
      uses: actions/download-artifact@v1
      with:
        name: arch-latest

    - name: Update repository
      env:
        GPG_KEY: ${{ secrets.SURFACE_GPG_KEY }}
        GIT_REF: ${{ github.ref }}
      run: |
        cp arch-latest/* arch/
        rm -r arch-latest

        cd arch
        repo-add -n linux-surface.db.tar.gz *.pkg.tar.zst

        # Sign the updated repository
        echo "$GPG_KEY" | base64 -d | gpg --import --no-tty --batch --yes
        if [ -f 'linux-surface.db.sig' ]; then
          rm linux-surface.db.sig
          rm linux-surface.db.tar.gz.sig
          rm linux-surface.files.sig
          rm linux-surface.files.tar.gz.sig
        fi
        gpg --detach-sign --batch --no-tty --no-armor -u $GPG_KEY_ID linux-surface.db
        gpg --detach-sign --batch --no-tty --no-armor -u $GPG_KEY_ID linux-surface.db.tar.gz
        gpg --detach-sign --batch --no-tty --no-armor -u $GPG_KEY_ID linux-surface.files
        gpg --detach-sign --batch --no-tty --no-armor -u $GPG_KEY_ID linux-surface.files.tar.gz

        # Parse git tag from ref
        GIT_TAG=$(echo $GIT_REF | sed 's|^refs/tags/||g')

        # Convert packages into references
        for pkg in $(find . -name '*.pkg.tar.zst'); do
          echo "secureboot-mok:$GIT_TAG/$(basename $pkg)" > $pkg.blob
          rm $pkg
        done

    - name: Commit and push
      uses: github-actions-x/commit@v2.3
      with:
        github-token: ${{ secrets.GITHUB_BOT_TOKEN }}
        push-branch: master
        commit-message: Update arch secureboot-mok package
        force-add: false
        rebase: true
        files: arch/*
        name: surfacebot
        email: surfacebot@users.noreply.github.com

  repo-f31:
    name: Update Fedora 31 package repository
    needs: [build-f31, repo-arch]
    runs-on: ubuntu-latest
    container: fedora:31
    steps:
    - name: Install dependencies
      run: |
        dnf install -y createrepo_c git findutils wget
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        repository: linux-surface/repo
        token: ${{ secrets.GITHUB_BOT_TOKEN }}
        fetch-depth: 0
        ref: master

    - name: Unpack repository
      run: |
        cd fedora/f31

        for blob in $(find . -name '*.blob'); do
          blobref="$(cat $blob)"
          repo="${blobref%%:*}"
          vers="${blobref#*:}"
          wget "https://github.com/linux-surface/$repo/releases/download/$vers"
        done

    - name: Download artifacts
      uses: actions/download-artifact@v1
      with:
        name: fedora-31-latest

    - name: Update repository
      env:
        GPG_KEY: ${{ secrets.SURFACE_GPG_KEY }}
        GIT_REF: ${{ github.ref }}
      run: |
        # Parse git tag from ref
        GIT_TAG=$(echo $GIT_REF | sed 's|^refs/tags/||g')

        for pkg in $(find fedora-31-latest -name '*.rpm'); do
          echo "linux-surface:$GIT_TAG/$(basename $pkg)" > $pkg.blob
        done

        cp fedora-31-latest/* fedora/f31/
        rm -r fedora-31-latest

        cd fedora/f31
        createrepo_c --xz --update --verbose .

        # Sign the updated repository
        echo "$GPG_KEY" | base64 -d | gpg --import --no-tty --batch --yes
        if [ -f 'repodata/repomd.xml.asc' ]; then
          rm repodata/repomd.xml.asc
        fi
        gpg --detach-sign --batch --no-tty --armor -u $GPG_KEY_ID repodata/repomd.xml

    - name: Commit and push
      uses: github-actions-x/commit@v2.3
      with:
        github-token: ${{ secrets.GITHUB_BOT_TOKEN }}
        push-branch: master
        commit-message: Update f31 secureboot-mok package
        force-add: false
        rebase: true
        files: fedora/f31/*
        name: surfacebot
        email: surfacebot@users.noreply.github.com

  repo-f30:
    name: Update Fedora 30 package repository
    needs: [build-f30, repo-f31]
    runs-on: ubuntu-latest
    container: fedora:30
    steps:
    - name: Install dependencies
      run: |
        dnf install -y createrepo_c git findutils wget
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        repository: linux-surface/repo
        token: ${{ secrets.GITHUB_BOT_TOKEN }}
        fetch-depth: 0
        ref: master

    - name: Unpack repository
      run: |
        cd fedora/f30

        for blob in $(find . -name '*.blob'); do
          blobref="$(cat $blob)"
          repo="${blobref%%:*}"
          vers="${blobref#*:}"
          wget "https://github.com/linux-surface/$repo/releases/download/$vers"
        done

    - name: Download artifacts
      uses: actions/download-artifact@v1
      with:
        name: fedora-30-latest

    - name: Update repository
      env:
        GPG_KEY: ${{ secrets.SURFACE_GPG_KEY }}
        GIT_REF: ${{ github.ref }}
      run: |
        # Parse git tag from ref
        GIT_TAG=$(echo $GIT_REF | sed 's|^refs/tags/||g')

        for pkg in $(find fedora-30-latest -name '*.rpm'); do
          echo "linux-surface:$GIT_TAG/$(basename $pkg)" > $pkg.blob
        done

        cp fedora-30-latest/* fedora/f30/
        rm -r fedora-30-latest

        cd fedora/f30
        createrepo_c --xz --update --verbose .

        # Sign the updated repository
        echo "$GPG_KEY" | base64 -d | gpg --import --no-tty --batch --yes
        if [ -f 'repodata/repomd.xml.asc' ]; then
          rm repodata/repomd.xml.asc
        fi
        gpg --detach-sign --batch --no-tty --armor -u $GPG_KEY_ID repodata/repomd.xml

    - name: Commit and push
      uses: github-actions-x/commit@v2.3
      with:
        github-token: ${{ secrets.GITHUB_BOT_TOKEN }}
        push-branch: master
        commit-message: Update f30 secureboot-mok package
        force-add: false
        rebase: true
        files: fedora/f30/*
        name: surfacebot
        email: surfacebot@users.noreply.github.com

  release:
    name: Publish release
    needs: [repo-deb, repo-arch, repo-f31, repo-f30]
    runs-on: ubuntu-latest
    steps:
    - name: Download Debian artifacts
      uses: actions/download-artifact@v1
      with:
        name: debian-latest

    - name: Download Arch Linux artifacts
      uses: actions/download-artifact@v1
      with:
        name: arch-latest

    - name: Download Fedora 31 artifacts
      uses: actions/download-artifact@v1
      with:
        name: fedora-31-latest

    - name: Download Fedora 30 artifacts
      uses: actions/download-artifact@v1
      with:
        name: fedora-30-latest

    - name: Upload assets
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./*-latest/*
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true
